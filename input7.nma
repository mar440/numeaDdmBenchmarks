<hmi>
  <!--
  06/03/2015
  Validation case for mortar

  Rectangle domain in x-direction (centered)
  2 domains.

  Left boundary is fixed
  Right boundary under traction (X, Y or Z) or Rotation (X) or both

  Warning: the 'name' must not contain space
  -->
  <SIMULATION name="MortarSimple">
    <LoadStep name="MortarSimple">
      <StartTime>0.</StartTime>
      <EndTime>0.5</EndTime>
      <StepTime>0.5</StepTime>
      <!--Choose your favorite boundary condition-->

      <BC_list>
	BC_FIXE_LEFT
	BC_TRACTION_ROT_X
      </BC_list>
	  
    </LoadStep>
   
    <Solver name="nls_ddsolv"/>

  </SIMULATION>
  
  	<SOLVER_COLLECTION>

	<!--
    <NonLinearSolver name="nls_mumps" type="FULL_NEWTON" linear="mumps1">
      <ConvergenceCriterion type="DN" value="1e-3"/>
      <ConvergenceCriterion type="EN" function="ENconvergenceFactor"/>
    </NonLinearSolver>
	<NonLinearSolver name="nls_pardiso" type="FULL_NEWTON" linear="pardiso1">
      <ConvergenceCriterion type="DN" value="1e-3"/>
      <ConvergenceCriterion type="EN" function="ENconvergenceFactor"/>
    </NonLinearSolver>

		-->
		
	<NonLinearSolver name="nls_ddsolv" type="FULL_NEWTON" linear="ddsolv">
      <ConvergenceCriterion type="DN" value="1e-3"/>
      <ConvergenceCriterion type="EN" function="ENconvergenceFactor"/>
    </NonLinearSolver>

	<!--Linear solvers -->
	<LinearSolver name="pardiso" type="DIRECT_PARDISO">
	</LinearSolver>
		<!-- 
	<LinearSolver name="mumps1" type="DIRECT_MUMPS">
	<ordering type="Automatic" />
	</LinearSolver>
		-->
        

	<LinearSolver name="ddsolv" type="DIRECT_DDSOLV">
		<dumpfile>false</dumpfile>
		<blablafile>true</blablafile>
        <dumpfileCSRmatrix>true</dumpfileCSRmatrix>
		<FETI>2</FETI>
		<eps_iter>1e-6</eps_iter>
        <max_numb_it>300</max_numb_it>
		<numb_dir>200</numb_dir>
        <patch_radius>1</patch_radius>
		<LocalSolver>2</LocalSolver>
        <MortarLocalization>master</MortarLocalization> 
	<!--		<MortarLocalization>slave</MortarLocalization> -->
	</LinearSolver>

	
	</SOLVER_COLLECTION>

  <MODEL name="square10x10">
    <Dimension>3D</Dimension>
    <Mesh name="CubesX2">
      <Filename>mesh.vtu</Filename>
    </Mesh>
    
	
    <!-- LEFT Boundary condition -->
    <DofSet name="FIXE_LEFT">
      <type>selector</type>
      <selector_name>SelLeft</selector_name>
      <dof_isX>true</dof_isX>
      <dof_isY>true</dof_isY>
      <dof_isZ>true</dof_isZ>
    </DofSet>

    <BC name="BC_FIXE_LEFT" type="disp_func">
      <Set>FIXE_LEFT</Set>
      <Function>zero</Function>
      <Multiplier>1.0</Multiplier>
    </BC>

    <!-- RIGHT Boundary condition -->
    <NodeSet name="RIGHT">
      <type>selector</type>
      <selector_name>SelRight</selector_name>
    </NodeSet>


    <BC name="BC_TRACTION_ROT_X" type="disp_trans">
      <Set>RIGHT</Set>
      <Transf name="TxRx_rot" type="Rx">
	<Function>RotX</Function>
      </Transf>
      <Transf name="TxRx_right_x" type="Tx">
	<Function>Traction</Function>
      </Transf>
    </BC>

    <!--MORTAR Boundary condition -->
    <FacetSet name="MORTAR_LEFT">
      <type>selector</type>
      <selector_name>SelMortarLeft</selector_name>
    </FacetSet>

    <FacetSet name="MORTAR_RIGHT">
      <type>selector</type>
      <selector_name>SelMortarRight</selector_name>
    </FacetSet>

    <MeshBoundary name="MortarLeft">
      <FacetSet>MORTAR_LEFT</FacetSet>
    </MeshBoundary>

    <MeshBoundary name="MortarRight">
      <FacetSet>MORTAR_RIGHT</FacetSet>
    </MeshBoundary>

    <MORTAR_INTERFACE name="mortar1">
      <PART_A name="MortarRight"/>
      <PART_B name="MortarLeft"/>
      <Distance>10.0</Distance>
			<ComputeOnce>true</ComputeOnce>
			<OverlaySlices>0</OverlaySlices>
    </MORTAR_INTERFACE>

  </MODEL>
  
  <FORMULATIONS>
	<Formulation name="f1" type="PC3DTET10" id="24"/>
	<Formulation name="f2" type="PC3DHEX8" id="30"/>
	<Formulation name="f3" type="PC3DHEX20" id="36"/>
	<Formulation name="f4" type="PC3DHEX8_3FSR" id="1000"/>
	<Formulation name="f5" type="PC3DTET10_3FSR" id="2000"/>
  </FORMULATIONS>
  <!-- The material database
       All id defined by the CellData MaterialId should have an entry
       in this database. The material of cell given by its materialId
       Should be present in this database with a correct 'id'.
       All materials defined must have a different name AND a
       different id.
  -->
  
  <MATERIAL_COLLECTION name="db_material">
    <!-- NOTE: FOR THIS MODEL:
	   - Left part:  MaterialId==1
	   - Right part: MaterialId==2
	 So: just change the id of the below material...
    -->
    <!-- Material definition
	  A material should have a unique name and unique id.
	  The id reference the id defined by the array 'MaterialId'
	  for each cell in the mesh (see <mesh>.vtu).
	  Possible types:
            - Neo_Hookean
            - Mooney_Rivlin
            - Arruda_Boyce
            - Gent
	  Rem: uncoupled should be = 0 for Neo_Hookean and 1 for others
	  
	  Possible volumetric_types:
            - NEA_HOOKEAN
            - NIKE3D
            - TYPE1
            - ABAQUS
	  Parameters are:
            - Nu, E for Nea_Hookean
            - C0, C1 for Mooney_Rivlin
            - Mu, Lambda_m for Arruda_Boyce
            - Mu, Jm for Gent
    -->
    <Material name="Mat1" id="100" type="Neo_Hookean" uncoupled="0" volumetric_type="NEO_HOKEAN"  >
      <Param name="Nu">0.30</Param>
      <Param name="E">1000</Param>
    </Material>

    <!-- Steel -->
    <Material name="Steel" id="22" type="Neo_Hookean" uncoupled="0" volumetric_type="NEO_HOKEAN"  >
      <Param name="Nu">0.30</Param>
      <Param name="E">210000</Param>
    </Material>
	
    <Material name="Mat3" id="1" type="Neo_Hookean" uncoupled="0" volumetric_type="NEO_HOKEAN"   >
      <Param name="Nu">0.1</Param>
      <Param name="E">100</Param>
    </Material>
	
		
    <Material name="Mat3BIS" id="2" type="Neo_Hookean" uncoupled="0" volumetric_type="NEO_HOKEAN"   >
      <Param name="Nu">0.1</Param>
      <Param name="E">100</Param>
    </Material>
	
    <Material name="Mat4" id="20" type="Mooney_Rivlin" uncoupled="1" volumetric_type="ABAQUS"  >
      <Param name="C0">24.</Param>
      <Param name="C1">1.5</Param>
      <Param name="Bulk">10000</Param>
    </Material>

    <Material name="MatNESD2" id="111" type="Mooney_Rivlin" uncoupled="1" volumetric_type="ABAQUS"  >
      <Param name="C0">0.1863</Param>
      <Param name="C1">0.00979</Param>
      <Param name="Bulk">150</Param>
    </Material>

    <!--Same as above-->
    <Material name="MatNESD2bis" id="11" type="Mooney_Rivlin" uncoupled="1" volumetric_type="ABAQUS"  >
      <Param name="C0">0.1863</Param>
      <Param name="C1">0.00979</Param>
      <Param name="Bulk">150</Param>
    </Material>	
  </MATERIAL_COLLECTION>

  <!-- Definition of all discrete and parameter functions
       Possible types are:
         - discrete_function:
	   are basic interpolation of function points
	 - parameter_function:
	   used to pilot parameters (combination of discrete_function, multiplier ...)
  -->
  <FUNCTION_COLLECTION name="Functions">

    <!-- This discrete function is defined by a list of 3 points.

	 Linear from 0.0 to 10.0
	 Constant from 10.0 to 100.0

	 Interpolation is linear.

	 Possible interpolation types are:
         - linear
         - piecewise_constant
         - polynomial

	 Extrapolation on the left has a constant null value
	 Extrapolation on the right (>100.0) has a constant value of 0.5

Possible extrapolation types are:
- zero
- continue_value
- continue_slope
- periodic
    -->
<!--Traction function used in every Traction BC-->
    <Function name="Traction" type="discrete_function">
      <Interpolation>linear</Interpolation>
      <Extrapolation_left>zero</Extrapolation_left>
      <Extrapolation_right>continue_value</Extrapolation_right>
      <Points>
        0.0    0.0
        1.3  5.0
      </Points>
    </Function>

    <Function name="TractionNeg" type="discrete_function">
      <Interpolation>linear</Interpolation>
      <Extrapolation_left>zero</Extrapolation_left>
      <Extrapolation_right>continue_value</Extrapolation_right>
      <Points>
        0.0    0.0
        1.3  -5.0
      </Points>
    </Function>

    <Function name="RotX" type="discrete_function">
      <Interpolation>linear</Interpolation>
      <Extrapolation_left>zero</Extrapolation_left>
      <Extrapolation_right>continue_value</Extrapolation_right>
      <Points>
        0.0   0.0
        1.3  45.0
	10  45.0
      </Points>
    </Function>

    <Function name="fct_one" type="discrete_function">
      <Interpolation>linear</Interpolation>
      <Extrapolation_left>continue_value</Extrapolation_left>
      <Extrapolation_right>continue_value</Extrapolation_right>
      <Points>
        0.0       1.0
        1000000.0 1.0
      </Points>
    </Function>

    <Function name="fct_pressure" type="discrete_function">
      <Interpolation>linear</Interpolation>
      <Extrapolation_left>continue_value</Extrapolation_left>
      <Extrapolation_right>continue_value</Extrapolation_right>
      <Points>
        0.0       0.0
        1.0       0.3
        3.0       0.0
        10.0      1.0
        1000000.0 1.0
      </Points>
    </Function>

    <!-- A parameter function to pilot Energy convergence criterion

	 Without attribute a parameter function is constant equal to 1

	 Possible attributes are:
         - Multiplier : a double
         - ft : A time dependant discrete_function
         - fT : A temperature dependant discrete_function (not used)
    -->
    <Function name="ENconvergenceFactor" type="parameter_function">
      <Multiplier>2e-3</Multiplier>
      <ft>fct_one</ft>
    </Function>

    <Function name="FctPressure" type="parameter_function">
      <Multiplier>1.0</Multiplier>
      <ft>fct_pressure</ft>
    </Function>

    <Function name="penalty1" type="parameter_function">
      <Multiplier>500.</Multiplier>
    </Function>
  </FUNCTION_COLLECTION>



  <!-- List of selectors (eg selection)
       Possible types of selectors:
         - planar_selector
	 - material
	 - material list
	 - point material (the material closer to the point is selected)
  -->
  <SELECTOR_COLLECTION name="Selectors">
    
    <Selector name="SelRight" type="planar_selector">
      <epsilon>0.001</epsilon>
      <Point>4. 0. 0.</Point>
      <Vector>1. 0. 0.</Vector>
      <region>boundary</region>
    </Selector>
    
    <Selector name="SelLeft" type="planar_selector">
      <epsilon>0.001</epsilon>
      <Point>-4. 0. 0.</Point>
      <Vector>-1. 0. 0.</Vector>
      <region>boundary</region>
    </Selector>

    <Selector name="SelMortarLeft" type="planar_selector">
      <epsilon>0.001</epsilon>
      <point>0. 0. 0.</point>
        <Vector>1. 0. 0.</Vector>
      <region>boundary</region>
      <entity>facet</entity>
      <piece>1</piece>
    </Selector>

    <Selector name="SelMortarRight" type="planar_selector">
      <epsilon>0.001</epsilon>
      <point>0. 0. 0.</point>
      <Vector>-1. 0. 0.</Vector>
      <region>boundary</region>
      <entity>facet</entity>
      <piece>2</piece>
    </Selector>
  </SELECTOR_COLLECTION>

  <PostProcessing> 
    <Output name="out_Model" type="Model" mesh="all" output_frequency="increment" write="paraview">
        <displace value="yes"/>
        <internal_force value="yes"/>
    </Output> 
  </PostProcessing>

  <!--  PostProcessing options:

  Can define for each LoadStep a specific behaviour.
  eg: What to print and when.
  
  
  Rem: This block is optional
  -->
<!--    <POST disable="0" /> -->


</hmi>
